plugins {
    id 'java'
    id 'java-test-fixtures'
    id 'jvm-test-suite'
    id 'application'
    id 'com.palantir.git-version' version '0.15.0'
    id 'net.ltgt.errorprone' version '3.0.1'
}

group 'com.github.ianparkinson'
version gitVersion()

repositories {
    mavenCentral()
}

dependencies {
    errorprone 'com.google.errorprone:error_prone_core:2.15.0'

    compileOnly 'com.google.errorprone:error_prone_core:2.15.0'
    implementation 'com.google.code.gson:gson:2.10'
    implementation 'info.picocli:picocli:4.7.0'
    annotationProcessor 'info.picocli:picocli-codegen:4.7.0'

    testFixturesImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.0'
    testFixturesApi 'com.squareup.okhttp3:mockwebserver:4.10.0'
}

task copyLicense(type: Copy) {
    group = "build"
    description = "Copy legal docs into the build"
    from layout.projectDirectory.file("LICENSE"), layout.projectDirectory.file("NOTICE")
    into new File(sourceSets.main.output.resourcesDir, "META-INF")
}

compileJava {
    sourceCompatibility = 11
    targetCompatibility = 11
    options.compilerArgs += ["-Aproject=${project.group}/${project.name}"]
    dependsOn(copyLicense)
}

testing {
    suites {
        configureEach {
            useJUnitJupiter("5.9.0")
            sourceCompatibility = 11
            targetCompatibility = 11

            dependencies {
                implementation 'com.google.truth:truth:1.1.3'
            }
        }

        integrationTest(JvmTestSuite) {
            testType = TestSuiteType.INTEGRATION_TEST
            dependencies {
                implementation project.getDependencies().testFixtures(project)
                implementation "org.junit.jupiter:junit-jupiter-params:5.9.0"
            }
            targets {
                all {
                    testTask.configure {
                        systemProperty 'helog.expected.version', version
                    }
                }
            }
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    options.errorprone.enabled = true
}

application {
    mainClass = 'com.github.ianparkinson.helog.Helog'
}

jar {
    manifest {
        attributes(
                'Implementation-Title': project.name,
                'Implementation-Version': project.version,
        )
    }
}

check {
    dependsOn integrationTest
}

integrationTest {
    dependsOn installDist
    shouldRunAfter test
}
